services:
  animatrixx-db:
    image: mariadb
    container_name: animatrixx-db
    restart: always
    env_file:
      - .env
    volumes:
      - animatrixx_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - animatrixx

  animatrixx-backend: &animatrixx_server
    image: animatrixx_server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - animatrixx-db
      - redis
    volumes:
      - .:/code
    env_file:
      - .env
    ports:
      - 80:80
    networks:
      - animatrixx

  redis:
    restart: always
    image: redis:latest
    container_name: animatrixx-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redisdata:/data
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - animatrixx

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - animatrixx

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - animatrixx

  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki-config.yaml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - animatrixx
  
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/log/django:/var/log/django
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - animatrixx

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - animatrixx

  celery:
    <<: *animatrixx_server
    container_name: celery_worker
    command: celery -A animatrixx_server worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    ports: []
    networks:
      - animatrixx

  celery-beat:
    <<: *animatrixx_server
    container_name: celery_beat
    command: celery -A animatrixx_server beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    ports: []
    networks:
      - animatrixx

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    volumes:
      - static_data:/vol/static
    ports:
      - 8080:8080
    depends_on:
      - animatrixx-backend
    networks:
      - animatrixx

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - animatrixx

volumes:
  animatrixx_data:
  redisdata:
  rabbitmq_data:
  static_data:
  esdata:

networks:
  animatrixx:
    driver: bridge
